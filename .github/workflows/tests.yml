name: "Tests"

on:
  pull_request:
    branches:
      - "master"
  push:
    branches:
      - "master"

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -eux {0}

jobs:
  tests:
    name: "Tests"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-latest"
          - "ubuntu-20.04"
          - "windows-latest"
          - "macos-latest"
        mongodb-version:
          - "8.0"
        topology:
          - "server"
          - "replica_set"
          - "sharded_cluster"
        auth:
          - "noauth"
          - "auth"
        ssl:
          - "nossl"
          - "ssl"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - id: setup-mongodb
        name: "Run GitHub Action"
        uses: ./
        with:
          version: ${{ matrix.mongodb-version }}
          topology: ${{ matrix.topology }}
          auth: ${{ matrix.auth }}
          ssl: ${{ matrix.ssl }}

      - id: test-mongodb
        name: "Test GitHub Action"
        run: |
          chmod +x mongodb/bin/mongosh
          URI=$(cat uri.txt)
          ARGS=""
          if [ ${{ matrix.ssl }} == "ssl" ]; then
            ARGS="--tls --tlsCertificateKeyFile $(pwd)/.evergreen/x509gen/client.pem --tlsCAFile $(pwd)/.evergreen/x509gen/ca.pem"
          fi
          mongodb/bin/mongosh $URI $ARGS --eval "db.runCommand({ ping: 1 })"

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
    - uses: pre-commit/action@v3.0.1

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - id: cache-restore
        uses: actions/cache@v4
        with:
          path: ./.evergreen/github_app/node_modules
          key: npm-${{ hashFiles('./.evergreen/github_app/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-restore.outputs.cache-hit != 'true'
        working-directory: .evergreen/github_app
        run: npm ci - ignore-scripts
      - name: Lint
        working-directory: .evergreen/github_app
        run: npm run lint
